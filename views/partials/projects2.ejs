<!-- Modal gallery -->

<div class="container">
  <!-- <h2 class="display-3" ><span2>FULLSTACK PROJECTS</span2></h2> -->
    <h2 class="display-3" ><span2>PROJECTS</span2></h2>
  <p><span>Below find a collection of projects I created to illustrate my skills and knowledge on how to build applications using event-driven micro-services with docker and kubernete for deployment orchestration, frontend clients using ReactJS, HTML, CSS, ejs, and on the backend, the core tech stack I use is nodeJS expressJS, axios, mongoDB, Google Firebase, with a few extra packages sprincled here and there as needed.  
    
  On all of these projects, I have included the link to their source-code in my Github repositories.</span>

  </p>
  
  <hr />
  <div class="row">
    <div class="col-md-4 ">
      <prj class="card card-size mx-auto d-block ">  
        <a class="btn btn-blank btn-sm  summary " href="" role=""
        ><span>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMy Blog App<br/>&nbsp&nbspEvent-Driven Microservices</span> </a>
        <p>Tech Stack: Javascript, NodeJS, ExpressJS, ReactJS, Postman, Docker, Kubernate. </p>
        <hr/>
        <span>HC blog is an application made with a collection of microservices, which run independently of each other. The app uses a simplistic event-bus with just enough functionality to listen and broadcast events so that each independent micro-service can produce and consume information as needed without having to directly connect to the other services or to their databases, as it is the case with monolithic applications.
</span>
        </prj>
       
      <img
        src="./assets/images/blogmicroservices.png"
        class="card card-size img-size mx-auto d-block"
        alt="Executive Management Certified"
      />
      <prj class="card card-size mx-auto d-block ">  
      <form action="/" method="post" >
       
        <button name="choice" value="rumme5" class="btn px-4 btn-light btn-sm " type="submit">Info
        </button>
       
        <button name="choice" value="code5" class="btn px-4 btn-light btn-sm " type="submit">Source Code
        </button>
      </form>
      
    </prj>
    <h1 style='text-align: Center; color: #c3266f;'>_____________</h1>

    <br/>
    </div>

    <div class="col-md-4 ">
      <prj class="card card-size mx-auto d-block ">  
        <a class="btn btn-blank btn-sm  summary " href="https://hc-newsletter-app.herokuapp.com/" role=""
        ><span>&nbsp&nbsp&nbsp&nbspMy Newsletter Signup App<br/>API to Mailchimp</span> </a>
        <p>Tech Stack: Javascript, NodeJS, ExpressJS, HTML, CSS, Bootstrap. </p>
       
        <hr/>
        <span>This "Newsletter Signup Web App" illustrates my experience with APIs by connecting, the backend server to the Mailchimp
          servers, in order to automatically register new subscribers.  
<br/><br/>
          In the front-end, I used HTML, CSS, and Bootstrap to render the user interface.
<br/><br/>
          In the back-end I used nodeJS and expressJS to manage the API to mailchimp and to process all the requests and to render the responce to the client through a series of routes via the "post" and "get" accions.
        </span>
        </prj>
       
      <img
        src="./assets/images/newslettersignup.png"
        class="card card-size img-size mx-auto d-block"
        alt="Executive Management Certified"
      />
      <prj class="card card-size mx-auto d-block ">  
      <form action="/" method="post" >
       
        <button name="choice" value="rumme1" class="btn px-4 btn-light btn-sm " type="submit">Run App
        </button>
       
        <button name="choice" value="code1" class="btn px-4 btn-light btn-sm " type="submit">Source Code
        </button>
      </form>
      
    </prj>
    <h1 style='text-align: Center; color: #c3266f;'>_____________</h1>

    <br/>
    </div>

    <div class="col-md-4 "> 
      <prj class="card card-size mx-auto d-block ">  
        <a class="btn btn-blank btn-sm  summary " href="https://hc-newsletter-app.herokuapp.com/" role=""
          ><span>&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbspMy Wikipedia Server App<br/>Full Implementation of CRUD<br/>RESTful API </span> </a>
           <p>Tech Stack: Javascript, NodeJS, ExpressJS, Postman. </p>
       
          <hr/>
        <span>
          A complete "Representational State Transfer (REST)" Web Services to allow anyone to query my personal wikipedia of articles stored in my private cloud cluster database at AWS.

          <br/><br/>
          Users can implement the full CRUD interface to manipulate the articles within the wikipedia.
 <br/><br/>
          This implementation does not have a front end.  It can only be accessed via API posts and gets through the designated end-points.
          
        </span>
        </prj>
       
      <img
        src="./assets/images/studio.png"
        class="card card-size img-size mx-auto d-block"
        alt="Complete implementation of a RESTful API Server"
      />
      <prj class="card card-size mx-auto d-block ">  
        <form action="/" method="post">
      
          <button name="choice" value="rumme3" class="btn px-4 btn-light btn-sm " type="submit">Info</button>
         
          <button name="choice" value="code3" class="btn px-4 btn-light btn-sm " type="submit">&nbsp&nbsp&nbsp&nbspSource Code</button>
        </form>
      </prj>
      <h1 style='text-align: Center; color: #c3266f;'>_____________</h1>
    
    </div>
    

    </div>
  </div>
</div>
